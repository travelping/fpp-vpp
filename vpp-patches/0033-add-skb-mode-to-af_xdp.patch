From 187af48b3499704495e4219564901f7ae2227ef9 Mon Sep 17 00:00:00 2001
From: Vladimir Zhigulin <vladimir.jigulin@travelping.com>
Date: Fri, 27 Jun 2025 14:58:46 +0200
Subject: [PATCH] add skb mode to af_xdp

---
 src/plugins/af_xdp/af_xdp.h   |  6 +++++-
 src/plugins/af_xdp/device.c   | 13 +++++++++----
 src/plugins/af_xdp/unformat.c |  4 +++-
 3 files changed, 17 insertions(+), 6 deletions(-)

diff --git a/src/plugins/af_xdp/af_xdp.h b/src/plugins/af_xdp/af_xdp.h
index cf364fc86..ff0a64f4f 100644
--- a/src/plugins/af_xdp/af_xdp.h
+++ b/src/plugins/af_xdp/af_xdp.h
@@ -33,7 +33,8 @@
   _ (2, ADMIN_UP, "admin-up")                                                 \
   _ (3, LINK_UP, "link-up")                                                   \
   _ (4, ZEROCOPY, "zero-copy")                                                \
-  _ (5, SYSCALL_LOCK, "syscall-lock")
+  _ (5, SYSCALL_LOCK, "syscall-lock")                                         \
+  _ (6, MODE_SKB, "mode-skb")
 
 enum
 {
@@ -119,6 +120,8 @@ typedef struct
 
   char *netns;
 
+  __u32 bpf_xdp_flags;
+
   struct xsk_umem **umem;
   struct xsk_socket **xsk;
 
@@ -148,6 +151,7 @@ typedef enum
 typedef enum
 {
   AF_XDP_CREATE_FLAGS_NO_SYSCALL_LOCK = 1,
+  AF_XDP_CREATE_FLAGS_MODE_SKB = 2,
 } af_xdp_create_flag_t;
 
 typedef struct
diff --git a/src/plugins/af_xdp/device.c b/src/plugins/af_xdp/device.c
index da8b58c37..43dd13532 100644
--- a/src/plugins/af_xdp/device.c
+++ b/src/plugins/af_xdp/device.c
@@ -153,7 +153,7 @@ af_xdp_remove_program (af_xdp_device_t *ad)
   int ns_fds[2];
 
   af_xdp_enter_netns (ad->netns, ns_fds);
-  ret = bpf_xdp_query_id (ad->linux_ifindex, XDP_FLAGS_UPDATE_IF_NOEXIST,
+  ret = bpf_xdp_query_id (ad->linux_ifindex, ad->bpf_xdp_flags,
 			  &curr_prog_id);
   if (ret != 0)
     {
@@ -161,7 +161,7 @@ af_xdp_remove_program (af_xdp_device_t *ad)
       goto err0;
     }
 
-  ret = bpf_xdp_detach (ad->linux_ifindex, XDP_FLAGS_UPDATE_IF_NOEXIST, NULL);
+  ret = bpf_xdp_detach (ad->linux_ifindex, ad->bpf_xdp_flags, NULL);
   if (ret != 0)
     {
       af_xdp_log (VLIB_LOG_LEVEL_ERR, ad, "bpf_xdp_detach failed\n");
@@ -252,8 +252,7 @@ af_xdp_load_program (af_xdp_create_if_args_t * args, af_xdp_device_t * ad)
 
   fd = bpf_program__fd (bpf_prog);
 
-  if (bpf_xdp_attach (ad->linux_ifindex, fd, XDP_FLAGS_UPDATE_IF_NOEXIST,
-		      NULL))
+  if (bpf_xdp_attach (ad->linux_ifindex, fd, ad->bpf_xdp_flags, NULL))
     {
       args->rv = VNET_API_ERROR_SYSCALL_ERROR_6;
       args->error = clib_error_return_unix (0, "bpf_xdp_attach(%s) failed",
@@ -634,6 +633,12 @@ af_xdp_create_if (vlib_main_t * vm, af_xdp_create_if_args_t * args)
       0 == (args->flags & AF_XDP_CREATE_FLAGS_NO_SYSCALL_LOCK))
     ad->flags |= AF_XDP_DEVICE_F_SYSCALL_LOCK;
 
+  ad->bpf_xdp_flags = XDP_FLAGS_UPDATE_IF_NOEXIST;
+  if (args->flags & AF_XDP_CREATE_FLAGS_MODE_SKB) {
+    ad->flags |= AF_XDP_DEVICE_F_MODE_SKB;
+    ad->bpf_xdp_flags |= XDP_FLAGS_SKB_MODE;
+  }
+
   ad->linux_ifname = (char *) format (0, "%s", args->linux_ifname);
   vec_validate (ad->linux_ifname, IFNAMSIZ - 1);	/* libbpf expects ifname to be at least IFNAMSIZ */
 
diff --git a/src/plugins/af_xdp/unformat.c b/src/plugins/af_xdp/unformat.c
index 8c0482d83..044d6aeb3 100644
--- a/src/plugins/af_xdp/unformat.c
+++ b/src/plugins/af_xdp/unformat.c
@@ -19,7 +19,7 @@
 #include <af_xdp/af_xdp.h>
 
 uword
-unformat_af_xdp_create_if_args (unformat_input_t * input, va_list * vargs)
+unformat_af_xdp_create_if_args (unformat_input_t *input, va_list *vargs)
 {
   af_xdp_create_if_args_t *args = va_arg (*vargs, af_xdp_create_if_args_t *);
   unformat_input_t _line_input, *line_input = &_line_input;
@@ -54,6 +54,8 @@ unformat_af_xdp_create_if_args (unformat_input_t * input, va_list * vargs)
 	args->mode = AF_XDP_MODE_ZERO_COPY;
       else if (unformat (line_input, "no-syscall-lock"))
 	args->flags |= AF_XDP_CREATE_FLAGS_NO_SYSCALL_LOCK;
+      else if (unformat (line_input, "mode skb"))
+	args->flags |= AF_XDP_CREATE_FLAGS_MODE_SKB;
       else
 	{
 	  /* return failure on unknown input */
-- 
2.49.0

